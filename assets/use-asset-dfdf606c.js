import{d as l}from"./fast-deep-equal-c0fc55aa.js";const f=[];function p(e,n,i,o=0,u=!1){for(const r of n)if(l(i,r.args)){if(u)return;if(r.error)throw r.error;if(r.response)return r.response;throw r.promise}const s={args:i,promise:e(...i).then(r=>s.response=r??!0).catch(r=>s.error=r??"unknown error").then(()=>{o>0&&setTimeout(()=>{const r=n.indexOf(s);r!==-1&&n.splice(r,1)},o)})};if(n.push(s),!u)throw s.promise}function d(e,...n){if(n===void 0||n.length===0)e.splice(0,e.length);else{const i=e.find(o=>l(n,o.args));if(i){const o=e.indexOf(i);o!==-1&&e.splice(o,1)}}}function t(e,...n){return p(e,f,n,t.lifespan)}t.lifespan=0;t.clear=(...e)=>d(f,...e);t.preload=(e,...n)=>void p(e,f,n,t.lifespan,!0);t.peek=(...e)=>{var n;return(n=f.find(i=>l(e,i.args)))==null?void 0:n.response};export{t as u};
